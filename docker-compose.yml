
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py security_check --check-config &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code:Z
    env_file:
      - .env  # 
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    # Security: Limit resources
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:Z,ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - web
    # Security: Run as non-root user
    user: "101:101"  # nginx user in the container
    command: >
      /bin/sh -c "
        # Create necessary directories with proper permissions
        mkdir -p /var/cache/nginx /var/run &&
        chown -R nginx:nginx /var/cache/nginx /var/run &&
        # Start nginx
        exec nginx -g 'daemon off;'"
    # Security: Limit resources
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'



  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5051:80"
    depends_on:
      - db

volumes:
  pgdata:
  nginx_cache:
